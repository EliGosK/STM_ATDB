@using STM.ATDB.MvcWeb.Models
@using STM.ATDB.MvcWeb.App_Helpers

@model ChangePasswordViewModel
@{
    ViewBag.Title = "ChangePassword";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="form-container" class="panel-group col-md-12 no-gutter">
    <div id="search-container" class="col-md-12">
        <div class="panel-group col-md-12 well well-sm animated fadeIn">
            @using (Html.BeginForm("ChangePassword", "Account", FormMethod.Post, new { @class = "form-horizontal k-text-lg", role = "form", @novalidate = "novalidate" }))
            {
                @Html.AntiForgeryToken()
                using (Html.DevExtreme().ValidationGroup("ChangePasswordValidateGroup"))
                {
                    <div class="panel-group pl-2">
                        <div class="row padding-bottom-10">

                        </div>
                        <div class="row padding-bottom-10">
                            <div class="col-md-offset-2 col-md-10">
                                <div class="row dx-field">
                                    <div class="col-md-3 text-right">@(Html.LabelFor(m => m.CurrentPassword))</div>
                                    <div class="col-md-3">
                                        @(Html.DevExtreme().TextBoxFor(m => m.CurrentPassword)
                                        .ID("CurrentPasswordTextBox")
                                        .Mode(TextBoxMode.Password)
                                        )
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row padding-bottom-10">
                            <div class="col-md-offset-2 col-md-10">
                                <div class="row dx-field">
                                    <div class="col-md-3 text-right">@(Html.LabelFor(m => m.NewPassword))</div>
                                    <div class="col-md-3">
                                        @(Html.DevExtreme().TextBoxFor(m => m.NewPassword)
                                        .ID("NewPasswordTextBox")
                                        .Mode(TextBoxMode.Password)
                                        )
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row padding-bottom-10">
                            <div class="col-md-offset-2 col-md-10">
                                <div class="row dx-field">
                                    <div class="col-md-3 text-right">@(Html.LabelFor(m => m.ConfirmNewPassword))</div>
                                    <div class="col-md-3">
                                        @(Html.DevExtreme().TextBoxFor(m => m.ConfirmNewPassword)
                                        .ID("ConfirmNewPasswordTextBox")
                                        .Mode(TextBoxMode.Password)
                                        )
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-offset-2 col-md-10">
                                <div class="col-md-offset-3 col-md-3 text-right">

                                    @(Html.DevExtreme().Button()
                                    .Text("OK")
                                    .Icon("fa fa-check-circle")
                                    .Type(ButtonType.Success)
                                    .OnClick("ChangePasswordClick")
                                    .ValidationGroup("ChangePasswordValidateGroup")
                                    )

                                    @(Html.DevExtreme().Button()
                                    .Text("Cancel")
                                    //.OnClick(@<text>  function(){ window.location = "@Url.Action("ChangePassword", "Account")"; }</text>)
                                    .OnClick("clearControlValue")
                                    .Icon("fa fa-ban")
                                    .Type(ButtonType.Danger)
                                    .ValidationGroup("novalidate")

                                    )

                                </div>
                            </div>
                        </div>
                    </div>
                }
                @Html.SECValidationSummary()
                @Html.SECSuccessSummary();
            }
        </div>
    </div>
</div>

@section script{
<script  type="text/javascript">

    function ChangePasswordClick(params) {
        app.ui.hideMessagePanel();
        if (params.validationGroup.validate().isValid) {
            var data = {
                NewPassword: $("#NewPasswordTextBox").dxTextBox("instance").option("value"),
                ConfirmNewPassword: $("#ConfirmNewPasswordTextBox").dxTextBox("instance").option("value"),
                CurrentPassword: $("#CurrentPasswordTextBox").dxTextBox("instance").option("value")
            }

            $.ajax({
                url: "/Account/ChangePassword",
                type: "POST",
                dataType: "json",
                data: app.addAntiForgeryToken({ dataText: JSON.stringify(data) }),
                success: function (data, status, xhr) {
                    if (data.IsError == 1) {
                        app.ui.showNotifyMessage('@ToastType.Error', data.Message);
                    }
                    else {
                        clearControlValue();
                        //app.ui.showSuccessMessagePanel(data.Message);
                        app.ui.showNotifyMessage('@ToastType.Success', data.Message);
                    }
                },
                error: function (xhr, status, error) {
                    var message = app.ui.handleAjaxError(xhr, status, error);
                    app.ui.showNotifyMessage('@ToastType.Error', message);
                }
            });
        }

        return false;
    }

    function clearControlValue()
    {
        $("#NewPasswordTextBox").dxTextBox("instance").option("value", "");
        $("#ConfirmNewPasswordTextBox").dxTextBox("instance").option("value", "");
        $("#CurrentPasswordTextBox").dxTextBox("instance").option("value", "");

        app.ui.hideMessagePanel();
        app.ui.clearValidateIcon();
    }

</script>

}


